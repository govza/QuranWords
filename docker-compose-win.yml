# before run use command `docker volume create postgres`
# run docker-compose -f docker-compose-win.yml up
version: "3.6"
services:
  web:
    build: ./django/
    container_name: web
    env_file:
      - ./.env
    entrypoint: "/www/entrypoint.sh"
    command: "gunicorn config.wsgi -b 0.0.0.0:8000 --workers 3 --timeout 600"
    volumes:
      - ./django/:/www
    expose:
      - "8000"
    depends_on:
      - db

  db:
    container_name: db
    image: "postgres:10.5-alpine"
    restart: always
    env_file:
      - ./.env
    expose:
      - "5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ./.env

  angular:
    container_name: angular
    command: "npm run build -- --output-path=./dist/out --configuration=production"
    build:
      context: ./frontend
    volumes:
      - ./frontend/angular/dist:/usr/src/app/dist

  nginx:
    container_name: nginx
    build: ./nginx/
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./django/media:/var/www/quran-words/media
      - ./django/collected_static:/var/www/quran-words/collected_static
      - ./frontend/angular/dist:/var/www/angular/dist
    ports:
      - "80:80"
    depends_on:
      - angular
      - web
  
volumes:
  postgres:
    external: true
